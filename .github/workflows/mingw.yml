name: build_mingw

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_mingw.outputs.name }}

jobs:
  build_mingw:
    name: build mingw

    strategy:
      matrix:
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: [Release, Debug]

    defaults:
      run:
        shell: cmd

    # See: https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
    # See: https://github.com/actions/runner-images/
    runs-on: windows-latest

    env:
      SOURCE_DIR:  ${{github.workspace}}\.cache\source
      TOOSL_DIR:   ${{github.workspace}}\.cache\tools
      INSTALL_DIR: ${{github.workspace}}\.cache\install_mingw
      SerialPortAssistant_VERSION: v0.5.26
      artifact_name: build_mingw

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Make directories
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build

      - name: pacman
        env:
          PATH: C:\msys64\usr\bin
        run: | 
          C:\msys64\usr\bin\pacman.exe -S --noconfirm ^
              mingw-w64-x86_64-cmake ^
              mingw-w64-x86_64-make ^
              mingw-w64-x86_64-nsis ^
              mingw-w64-x86_64-gcc ^
              mingw-w64-x86_64-qt5 ^
              mingw-w64-x86_64-cmark ^
              mingw-w64-x86_64-zlib ^
              mingw-w64-x86_64-openssl ^
              git base-devel

      - name: Cache installed
        uses: actions/cache@v3
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: cache-installed-mingw

      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          git clone https://github.com/KangLin/RabbitCommon.git

      - name: build SerialPortAssistant
        working-directory: ${{github.workspace}}\build
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}\RabbitCommon
          MSYSTEM: MINGW64
          PATH: C:\msys64\mingw64\bin;C:\msys64\usr\bin
          PKG_CONFIG_PATH: ${{env.INSTALL_DIR}}/lib/pkgconfig
        run: |
          cmake .. -G"MinGW Makefiles" ^
            -DCMARK_SHARED=OFF ^
            -DCMARK_TESTS=OFF ^
            -DCMARK_STATIC=ON ^
            -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} ^
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install ^
            -DRABBIT_ENABLE_INSTALL_DEPENDENT=ON ^
            -DRABBIT_ENABLE_INSTALL_QT=ON ^
            -DRABBIT_ENABLE_INSTALL_TO_BUILD_PATH=OFF ^
            -DBUILD_FREERDP=ON ^
            -DCMAKE_PREFIX_PATH=${{env.INSTALL_DIR}}
          cmake --build . --config ${{ matrix.BUILD_TYPE }}
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          copy /Y C:\msys64\mingw64\bin\*.dll install\bin
          copy /Y ${{env.INSTALL_DIR}}\bin\*.dll install\bin
          copy /Y ${{env.INSTALL_DIR}}\lib\*.dll install\bin
          makensis ${{github.workspace}}\build\Install.nsi

      - name: update artifact
        if: false
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}\build\SerialPortAssistant_Setup_${{env.SerialPortAssistant_VERSION}}.exe
