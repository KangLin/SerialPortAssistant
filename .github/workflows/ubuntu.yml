name: ubuntu

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [Ubuntu-20.04, Ubuntu-18.04]

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    
    runs-on: ${{ matrix.os }} 

    steps:
    - uses: actions/checkout@v2
    
    - name: apt helper action
      uses: ryankurte/action-apt@v0.2.0
      with:
        # architectures to pass to dpkg --add-architecture
        #architectures: # optional
        # apt packages to install
        packages: debhelper fakeroot  qttools5-dev qttools5-dev-tools libqt5serialport5-dev qtbase5-dev qtbase5-dev-tools
     
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: git clone RabbitCommon
      working-directory: ${{github.workspace}}
      run: git clone https://github.com/KangLin/RabbitCommon.git

    - name: build SerialPortAssistant
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      env:
        RabbitCommon_DIR: ${{github.workspace}}/RabbitCommon
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        cd ${{github.workspace}}
        ./build_debpackage.sh ${{env.Qt5_DIR}}
        cp ../serialportassistant_*.deb .

    - name: update 
      uses: actions/upload-artifact@v2
      with:
        name: SerialPortAssistant_${{ matrix.os }}
        path: |
          serialportassistant_*.deb

    - name: Upload To Github Release
      # You may pin to the exact commit or the version.
      # uses: xresloader/upload-to-github-release@3ad14478ee4fb9bd65e84c6d496a7d6862892f43
      uses: xresloader/upload-to-github-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The files or file patterns to upload. You can upload multiple files by split them by semicolon. You can use the glob pattern to find the files.
        file: ${{github.workspace}}/serialportassistant_*.deb
        # The files or file patterns to delete before uploading new files. You can delete multiple files by split them by semicolon. You can use the glob pattern to find the files.
        #delete_file: # optional, default is 
        # If you need to overwrite existing files, add overwrite: true to the with.
        #overwrite: # optional, default is false
        # The resultant deployment is a draft Release that only repository collaborators can see. This gives you an opportunity to examine and edit the draft release.
        draft: false # optional, default is true
        # The resultant deployment is a Prerelease. This gives you an opportunity to examine and edit the prerelease.
        prerelease: true # optional, default is false
        # With tags: true, your Releases deployment will trigger if and only if the build is a tagged build.
        tags: true # optional, default is false
        # Only work on these branches(splited by semicolon), set to nothing to accept all branches.
        #branches: master # optional, default is 
        # With verbose: true, be verbose.
        verbose: true # optional, default is false
        # Set custom tag name.
        #tag_name: 'v0.0.4'
        # If try to update latest release.
        #update_latest_release: true # optional, default is false
      if: startsWith(github.ref, 'refs/tags/')
 
