name: ubuntu

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest, windows-latest]

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    
    runs-on: ${{ matrix.os }} 

    steps:
    - uses: actions/checkout@v2
  
    - name: Install Qt
      # You may pin to the exact commit or the version.
      # uses: jurplel/install-qt-action@88f3374475d094ce56ca6a7cc41cfda5a6ec093c
      uses: jurplel/install-qt-action@v2.13.0
      with:
        # Directory to install Qt
        #dir: # optional
        # Version of Qt to install
        version: 5.12.10 # optional, default is 5.15.2
        # Host platform
        #host: # optional
        # Target platform for build
        #target: # optional, default is desktop
        # Architecture for Windows/Android
        #arch: # optional
        # Whether or not to install Qt dependencies on Linux
        #install-deps: # optional, default is true
        # Additional Qt modules to install
        #modules: # optional
        # Whether or not to actually download Qt
        #cached: # optional, default is false
        # Whether or not to automatically run setup-python to find a valid python version.
        #setup-python: # optional, default is true
        # Qt tools to download--specify comma-separated argument lists which are themselves separated by spaces: <tool_name>,<tool_version>,<tool_arch>
        #tools: # optional
        # Whether or not to set environment variables after running aqtinstall
        #set-env: # optional, default is true
        # Whether or not to actually install Qt or just the tools from the tools argument
        #tools-only: # optional, default is false
        # Version of aqtinstall to use in case of issues
        #aqtversion: # optional, default is ==1.1.3
        # Version of py7zr to use in case of issues
        #py7zrversion: # optional, default is ==0.14.0
        # Any extra arguments to append to the back
        #extra: # optional
    
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: git clone RabbitCommon
      working-directory: ${{github.workspace}}
      run: git clone https://github.com/KangLin/RabbitCommon.git

    - name: Configure QMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      env:
        RabbitCommon_DIR: ${{github.workspace}}/RabbitCommon
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        cd ${{github.workspace}}
        /usr/bin/bash ./build_debpackage.sh ${{env.Qt5_DIR}}
        #$Qt5_DIR/bin/qmake $GITHUB_WORKSPACE CONFIG*=$BUILD_TYPE RabbitCommon_DIR=${{github.workspace}}/RabbitCommon
        #make
