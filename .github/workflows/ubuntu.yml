name: ubuntu

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [Ubuntu-20.04, Ubuntu-18.04]
        BUILD_TYPE: [Release]

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    runs-on: ${{ matrix.os }}
    env:
      SerialPortAssistant_VERSION: 0.5.14
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install_${{matrix.BUILD_TYPE}}_${{matrix.os}}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Make directory
      run: |
        cmake -E make_directory ${{github.workspace}}/build
        cmake -E make_directory ${{env.SOURCE_DIR}}
        cmake -E make_directory ${{env.TOOSL_DIR}}
        cmake -E make_directory ${{env.INSTALL_DIR}}

    - name: apt helper action
      run: |
        sudo apt update
        sudo apt upgrade
        sudo apt install xvfb xpra debhelper fakeroot \
          qttools5-dev qttools5-dev-tools libqt5serialport5-dev qtbase5-dev \
          qtbase5-dev-tools cmake
        if [ "Ubuntu-20.04" == "${{matrix.os}}" ]; then
            echo "sudo apt install libcmark-gfm-dev libcmark-gfm-extensions-dev"
            sudo apt install libcmark-gfm-dev libcmark-gfm-extensions-dev
        fi

    - name: Cache installed
      uses: actions/cache@v2
      id: cache-installed
      with:
        path: |
          ${{env.INSTALL_DIR}}
        key: SerialPortAssistant-cache-installed-ubuntu-${{matrix.os}}-${{matrix.BUILD_TYPE}}

#    - name: build log4qt
#      working-directory: ${{env.SOURCE_DIR}}
#      env:
#        QT_ROOT: /usr/lib/`uname -m`-linux-gnu/qt5
#      run: |
#        if [ ! -d ${{env.INSTALL_DIR}}/lib/cmake/Log4Qt ]; then
#            git clone https://github.com/KangLin/Log4Qt.git
#            cd Log4Qt
#            cmake -E make_directory build
#            cd build
#            cmake .. -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} \
#                -DQT_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5 \
#                -DQt5_DIR=${{env.QT_ROOT}}/lib/cmake/Qt5 \
#                -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_DIR}} \
#                -DCMAKE_PREFIX_PATH=${{env.QT_ROOT}} \
#                -DLOG4QT_ENABLE_EXAMPLES=OFF \
#                -DLOG4QT_ENABLE_TESTS=OFF
#            cmake --build . --config ${{matrix.BUILD_TYPE}}
#            cmake --build . --config ${{matrix.BUILD_TYPE}} --target install/strip
#        fi

    - name: git clone RabbitCommon
      working-directory: ${{github.workspace}}
      run: git clone https://github.com/KangLin/RabbitCommon.git

    - name: build SerialPortAssistant
      env:
        RabbitCommon_DIR: ${{github.workspace}}/RabbitCommon
        #Log4Qt_DIR: ${{env.INSTALL_DIR}}
        WITH_CMARK_GFM: ON
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        cd ${{github.workspace}}
        ./build_debpackage.sh
        cp ../serialportassistant_${{env.SerialPortAssistant_VERSION}}_amd64.deb serialportassistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.os}}_amd64.deb

    - name: update xml file
      working-directory: ${{github.workspace}}
      if: ${{ matrix.BUILD_TYPE == 'Release' && matrix.os == 'Ubuntu-20.04'}}
      run: |
        sudo Xvfb :99 -ac &
        export DISPLAY=:99.0
        sudo apt install ./serialportassistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.os}}_amd64.deb
        echo "test ......"
        ./test/test_linux.sh
        echo "Update update_linux.xml ......"
        MD5=`md5sum serialportassistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.os}}_amd64.deb | awk '{print $1}'`
        export QT_XCB_GL_INTEGRATION=none
        ulimit -c unlimited
        echo "# sudo sysctl -w kernel.core_pattern=core"
        sudo sysctl -w kernel.core_pattern=${{github.workspace}}/core
        /opt/SerialPortAssistant/bin/SerialPortAssistant.sh \
                -f "`pwd`/update_linux.xml" \
                --md5 ${MD5} \
                -m "${{env.SerialPortAssistant_VERSION}}" \
                --pf serialportassistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.os}}_amd64.deb \
                -u "https://github.com/KangLin/SerialPortAssistant/releases/download/${VERSION}/serialportassistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.os}}_amd64.deb;https://sourceforge.net/projects/SerialPortAssistant/files/${{env.SerialPortAssistant_VERSION}}/serialportassistant_${{env.SerialPortAssistant_VERSION}}_amd64_${{matrix.os}}.deb"

    - name: dump core
      if: false
      working-directory: ${{github.workspace}}
      run: |
        gdb /opt/SerialPortAssistant/bin/SerialPortAssistant core

    #- name: Generate appimage
    #  run: |
    #    cd debian/serialportassistant/opt
    #    URL_LINUXDEPLOYQT=https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
    #    wget -c -nv ${URL_LINUXDEPLOYQT} -O linuxdeployqt.AppImage
    #    chmod a+x linuxdeployqt.AppImage
    #    cd SerialPortAssistant
    #    ../linuxdeployqt.AppImage share/applications/*.desktop \
    #          -qmake=qmake -appimage -verbose
    #    cp SerialPort_Assistant-${VERSION}-x86_64.AppImage ${{github.workspace}}/.

    - name: update
      uses: actions/upload-artifact@v2
      with:
        name: SerialPortAssistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.os}}
        path: |
          serialportassistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.os}}_amd64.deb
          update_linux.xml
    
    - name: Upload To Github Release
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: true
        body: |
          [:cn: 修改日志](ChangeLog_zh_CN.md) [:us: Change log](ChangeLog.md)
        files: |
          serialportassistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.os}}_amd64.deb
          update_linux.xml
