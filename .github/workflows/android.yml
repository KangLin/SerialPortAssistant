name: android

on: [push]

jobs:
  use_install_qt:
    name: use install qt android_${{matrix.os}}-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}

    strategy:
      matrix:
        BUILD_TYPE: [Release]
        ANDROID_ABI: [armeabi-v7a, x86]
        ANDROID_PLATFORM: [android-28]
        os: [Ubuntu-18.04]
        qt_version: [5.12.12]
        include:
          - VCPKG_TARGET_TRIPLET: arm-android
            qt_arch: android_armv7
            ANDROID_ABI: armeabi-v7a

          - VCPKG_TARGET_TRIPLET: x86-android
            qt_arch: android_x86
            ANDROID_ABI: x86

    runs-on: ${{ matrix.os }}

    env:
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install
      SerialPortAssistant_VERSION: v0.5.9
      VCPKGGITCOMMITID: 5cf60186a241e84e8232641ee973395d4fde90e1
      qt_modules: qtwebengine

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: snickerbockers/submodules-init@v4

    - name: make directory
      run: |
        cmake -E make_directory ${{env.SOURCE_DIR}}
        cmake -E make_directory ${{env.TOOSL_DIR}}
        cmake -E make_directory ${{env.INSTALL_DIR}}

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ${{env.TOOSL_DIR}}/qt
        key: android_${{matrix.os}}-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}-2021-11-03

    - name: Install Qt
      # You may pin to the exact commit or the version.
      # uses: jurplel/install-qt-action@a962fb91949c8e846a3e4a944d50e7ef5cc3a28a
      uses: jurplel/install-qt-action@v2.14.0
      with:
        # Directory to install Qt
        dir: ${{env.TOOSL_DIR}}/qt # optional
        # Version of Qt to install
        version: ${{matrix.qt_version}} # optional, default is 5.15.2
        # Host platform
        #host: linux # optional
        # Target platform for build
        target: android # optional, default is desktop
        # Architecture for Windows/Android
        arch: ${{matrix.qt_arch}} # optional
        # Whether or not to install Qt dependencies on Linux
        #install-deps: true # optional, default is true
        # Additional Qt modules to install
        modules: ${{env.qt_modules}} # optional
        # Force a Qt mirror in case the default is not working
        #mirror: # optional
        # Whether or not to actually download Qt
        cached: ${{ steps.cache-qt.outputs.cache-hit }} # optional, default is false
        # Whether or not to automatically run setup-python to find a valid python version.
        #setup-python: false # optional, default is true
        # Qt tools to download--specify comma-separated argument lists which are themselves separated by spaces: <tool_name>,<tool_version>,<tool_arch>
        #tools: # optional
        # Whether or not to actually install Qt or just the tools from the tools argument
        #tools-only: false # optional, default is false
        # Version of aqtinstall to use in case of issues
        #aqtversion: # optional, default is ==0.10.0
        # Version of py7zr to use in case of issues
        #py7zrversion: # optional, default is ==0.11.0
        # Any extra arguments to append to the back
        #extra: # optional

    - name: git clone RabbitCommon
      working-directory: ${{env.SOURCE_DIR}}
      run: git clone https://github.com/KangLin/RabbitCommon.git

    - name: build SerialPortAssistant
      env:
        RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        QT_ROOT: ${{env.Qt5_DIR}}
      run: |
          ${QT_ROOT}/bin/qmake ${{github.workspace}} \
               "CONFIG+=${{matrix.BUILD_TYPE}}"
          make
          make install INSTALL_ROOT=`pwd`/android-build

    - name: Package
      if: ${{matrix.BUILD_TYPE == 'Release'}}
      env:
        QT_ROOT: ${{env.Qt5_DIR}}
        RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        STOREPASS: ${{secrets.STOREPASS}}
      run: |
        ${QT_ROOT}/bin/androiddeployqt \
              --input `pwd`/App/android-libSerialPortAssistant.so-deployment-settings.json \
              --output `pwd`/android-build \
              --android-platform ${{matrix.ANDROID_PLATFORM}} \
              --gradle \
              --verbose \
              --sign ${{env.RabbitCommon_DIR}}/RabbitCommon.keystore rabbitcommon \
              --storepass ${{env.STOREPASS}}
        APK_FILE=`find . -name "android-build-release-signed.apk"`
        APK_NAME=SerialPortAssistant_${{matrix.ANDROID_ABI}}_${{env.SerialPortAssistant_VERSION}}.apk
        mv -f ${APK_FILE} ${APK_NAME}
        APK_FILE=${APK_NAME}
        cp ${{github.workspace}}/Update/update_android.xml update_android_${{matrix.ANDROID_ABI}}.xml
        MD5=`md5sum ${APK_FILE} | awk '{print $1}'`
        echo "MD5:${MD5}"
        sed -i "s/<VERSION>.*</<VERSION>${{env.SerialPortAssistant_VERSION}}</g" update_android_${{matrix.ANDROID_ABI}}.xml
        sed -i "s/<INFO>.*</<INFO>Release SerialPortAssistant ${{env.SerialPortAssistant_VERSION}}</g" update_android_${{matrix.ANDROID_ABI}}.xml
        sed -i "s/<TIME>.*</<TIME>`date`</g" update_android_${{matrix.ANDROID_ABI}}.xml
        sed -i "s/<ARCHITECTURE>.*</<ARCHITECTURE>${{matrix.ANDROID_ABI}}</g" update_android_${{matrix.ANDROID_ABI}}.xml
        sed -i "s/<MD5SUM>.*</<MD5SUM>${MD5}</g" update_android_${{matrix.ANDROID_ABI}}.xml
        sed -i "s:<URL>.*<:<URL>https\://github.com/KangLin/SerialPortAssistant/releases/download/${{env.SerialPortAssistant_VERSION}}/${APK_NAME}<:g" update_android_${{matrix.ANDROID_ABI}}.xml

    - name: update
      if: ${{ matrix.BUILD_TYPE == 'Release' }}
      uses: actions/upload-artifact@v2
      with:
        name: SerialPortAssistant_${{matrix.ANDROID_ABI}}_${{env.SerialPortAssistant_VERSION}}.apk
        path: |
          ${{github.workspace}}/SerialPortAssistant_${{matrix.ANDROID_ABI}}_${{env.SerialPortAssistant_VERSION}}.apk
          ${{github.workspace}}/update_android_${{matrix.ANDROID_ABI}}.xml

    - name: Upload To Github Release
      if: ${{ matrix.BUILD_TYPE == 'Release' && startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: true
        body: |
          [:cn: 修改日志](ChangeLog_zh_CN.md) [:us: Change log](ChangeLog.md)
        files: |
          ${{github.workspace}}/SerialPortAssistant_${{matrix.ANDROID_ABI}}_${{env.SerialPortAssistant_VERSION}}.apk
          ${{github.workspace}}/update_android_${{matrix.ANDROID_ABI}}.xml
