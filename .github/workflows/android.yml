name: android

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_android.outputs.name }}

jobs:
  build_android:
    strategy:
      matrix:
        BUILD_TYPE: [Release]
        qt_arch: [android_arm64_v8a, android_armv7, android_x86_64, android_x86]
        qt_version: [6.6.1]
        include:
          - BUILD_TYPE: Release
            qt_arch: android_arm64_v8a
            VCPKG_TARGET_TRIPLET: arm-android

          - BUILD_TYPE: Release
            qt_arch: android_armv7
            VCPKG_TARGET_TRIPLET: arm-android

          - BUILD_TYPE: Release
            qt_arch: android_x86_64 
            VCPKG_TARGET_TRIPLET: x64-android

          - BUILD_TYPE: Release
            qt_arch: android_x86
            VCPKG_TARGET_TRIPLET: x32-android

    runs-on: ubuntu-latest

    env:
      artifact_name: build_android
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install_${{matrix.BUILD_TYPE}}_${{matrix.qt_arch}}
      SerialPortAssistant_VERSION: v0.5.16
      VCPKGGITCOMMITID: 2f6176ce98fee807a207dc9e8fec213f111c291b
      ANDROID_PLATFORM: android-23
      ANDROID_NATIVE_API_LEVEL: 23
      qt_modules: qtscxml qtserialport qtwebview

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: make directory
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build

      - name: Cache installed
        #if: false
        uses: actions/cache@v2
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: cache-installed-android-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}

      - name: Cache Qt
        #if: false
        id: cache-qt
        uses: actions/cache@v1  # not v2!
        with:
          path: ${{env.TOOSL_DIR}}/qt
          key: qt${{matrix.qt_version}}_${{matrix.qt_arch}}

      - name: Install Qt of gcc_64
        uses: jurplel/install-qt-action@v3
        with:
          dir: '${{env.TOOSL_DIR}}/qt' # optional
          version: '${{matrix.qt_version}}'
          #host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          set-env: false
          cached: '${{ steps.cache-qt.outputs.cache-hit }}' # optional, default is false

      - name: Install Qt of android
        uses: jurplel/install-qt-action@v3
        with:
          # Directory to install Qt
          dir: '${{env.TOOSL_DIR}}/qt' # optional
          # Version of Qt to install
          version: '${{matrix.qt_version}}'
          # Host platform
          #host: linux # optional
          # Target platform for build
          target: 'android' # optional, default is desktop
          # Architecture for Windows/Android
          arch: '${{matrix.qt_arch}}' # optional
          # Additional Qt modules to install
          modules: '${{env.qt_modules}}' # optional. See: https://ddalcino.github.io/aqt-list-server/
          cached: '${{ steps.cache-qt.outputs.cache-hit }}' # optional, default is false

      - name: run-vcpkg
        if: false
        uses: lukka/run-vcpkg@v7.4
        with:
          # Indicates whether to only setup vcpkg (i.e. installing it and setting the environment variables VCPKG_ROOT, RUNVCPK_VCPKG_ROOT), without installing any port.
          #setupOnly: # optional
          #vcpkgGitURL: https://github.com/KangLin/vcpkg.git
          vcpkgGitCommitId: ${{env.VCPKGGITCOMMITID}}
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
          # compute its hash and append this to the computed cache's key.
          appendedCacheKey: android_${{matrix.os}}-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}-${{env.VCPKGGITCOMMITID}}
          additionalCachedPaths: $VCPKG_ROOT/installed
          vcpkgTriplet: '${{ matrix.VCPKG_TARGET_TRIPLET }}'
          vcpkgArguments: 'openssl'

      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          git clone https://github.com/KangLin/RabbitCommon.git

      - name: build SerialPortAssistant
        working-directory: ${{github.workspace}}/build
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
          QT_ROOT: ${{env.Qt5_DIR}}
          QT_ANDROID_KEYSTORE_PATH: ${{env.SOURCE_DIR}}/RabbitCommon/RabbitCommon.keystore
          QT_ANDROID_KEYSTORE_ALIAS: rabbitcommon
          QT_ANDROID_KEYSTORE_STORE_PASS: ${{secrets.STOREPASS}}
        run: |
          sudo chmod 777 ${Qt6_DIR}/bin/qt-cmake
          ${Qt6_DIR}/bin/qt-cmake .. \
              -DCMARK_SHARED=OFF \
              -DCMARK_TESTS=OFF \
              -DCMARK_STATIC=ON \
              -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} \
              -DQT_HOST_PATH=${Qt6_DIR}/../gcc_64 \
              -DANDROID_PLATFORM=${{env.ANDROID_PLATFORM}} \
              -DANDROID_NATIVE_API_LEVEL=${{env.ANDROID_NATIVE_API_LEVEL}} \
              -DQT_ANDROID_SIGN_APK=ON \
              -DQT_ENABLE_VERBOSE_DEPLOYMENT=OFF \
              -DQt6LinguistTools_DIR=${Qt6_DIR}/../gcc_64/lib/cmake/Qt6LinguistTools \
              -DCMAKE_INSTALL_PREFIX=`pwd`/install
          cmake --build . --config ${{matrix.BUILD_TYPE}} --target all
          APK_FILE=`find . -name "android-*.apk"`
          cp $APK_FILE SerialPortAssistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk

      - name: Package
        if: false
        env:
          QT_ROOT: ${{env.Qt5_DIR}}
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
          STOREPASS: ${{secrets.STOREPASS}}
        run: |
          ${QT_ROOT}/bin/androiddeployqt \
              --input `pwd`/App/android-libSerialPortAssistant.so-deployment-settings.json \
              --output `pwd`/android-build \
              --android-platform ${{matrix.ANDROID_PLATFORM}} \
              --gradle \
              --verbose \
              --sign ${{env.RabbitCommon_DIR}}/RabbitCommon.keystore rabbitcommon \
              --storepass ${{env.STOREPASS}}
          APK_FILE=`find . -name "android-build-release-signed.apk"`
          APK_NAME=SerialPortAssistant_${{matrix.ANDROID_ABI}}_${{env.SerialPortAssistant_VERSION}}.apk
          mv -f ${APK_FILE} ${APK_NAME}
          APK_FILE=${APK_NAME}
          cp ${{github.workspace}}/Update/update_android.xml update_android_${{matrix.ANDROID_ABI}}.xml
          MD5=`md5sum ${APK_FILE} | awk '{print $1}'`
          echo "MD5:${MD5}"
          sed -i "s/<VERSION>.*</<VERSION>${{env.SerialPortAssistant_VERSION}}</g" update_android_${{matrix.ANDROID_ABI}}.xml
          sed -i "s/<INFO>.*</<INFO>Release SerialPortAssistant ${{env.SerialPortAssistant_VERSION}}</g" update_android_${{matrix.ANDROID_ABI}}.xml
          sed -i "s/<TIME>.*</<TIME>`date`</g" update_android_${{matrix.ANDROID_ABI}}.xml
          sed -i "s/<ARCHITECTURE>.*</<ARCHITECTURE>${{matrix.ANDROID_ABI}}</g" update_android_${{matrix.ANDROID_ABI}}.xml
          sed -i "s/<MD5SUM>.*</<MD5SUM>${MD5}</g" update_android_${{matrix.ANDROID_ABI}}.xml
          sed -i "s:<URL>.*<:<URL>https\://github.com/KangLin/SerialPortAssistant/releases/download/${{env.SerialPortAssistant_VERSION}}/${APK_NAME}<:g" update_android_${{matrix.ANDROID_ABI}}.xml

      - name: update
        if: ${{ matrix.BUILD_TYPE == 'Release' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}/build/SerialPortAssistant_${{env.SerialPortAssistant_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk
